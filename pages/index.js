import Head from "next/head";

import styled from "styled-components";

import React,{useState} from 'react'
import { Dropdown } from "@/components";

const Home = () => {
  const [isOpen1, setIsOpen1] = useState(false);
  const [isOpen2, setIsOpen2] = useState(false);
  console.log(isOpen1, isOpen2, " from home ")
  return (
   <>
     <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Section>
       <Conatiner>
        <h1>Reusable Dropdown Component</h1>
        <Dropdown
         url="/api/options" id="1"
          isOpen={isOpen1}
          setIsOpen={setIsOpen1}

         />
         <Dropdown
          url="/api/options" searchExternal={true} id="2"
          isOpen={isOpen2}
          setIsOpen={setIsOpen2}

           />
           {/* <Grid>
          <Card
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2>
              HLD <span>-&gt;</span>
            </h2>
            <p>High Level Design of the Dropdown Search Component</p>
          </Card>

          <Card
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2>
              LLD <span>-&gt;</span>
            </h2>
            <p>Low Level Design Approach of the Dropdown Search Component</p>
          </Card>

          <Card
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2>
              Audit Reports <span>-&gt;</span>
            </h2>
            <p>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </Card>
        </Grid> */}
        </Conatiner>
      </Section>
   </>
  )
}
  const Section = styled.section`
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  min-height: 100vh;
  width: 100%;


`;

const Conatiner = styled.div`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  position: relative;
  padding: 4rem 2rem;
  gap: 2rem;
  /* width: 30rem; */
  text-align: center;

  &::before {
    content: "";
    background: var(--secondary-glow);
    border-radius: 50%;
    width: 480px;
    height: 360px;
    margin-left: -400px;
    position: absolute;
    left: 50%;
    filter: blur(45px);
  }

  &::after {
    content: "";
    background: linear-gradient(to right, #f64f59, #c471ed, #12c2e9);
    width: 240px;
    height: 180px;
    position: absolute;
    left: 50%;
    z-index: -1;
  }

  @media (max-width:768px){
    width: 100%;
    font-size: 0.8rem;
  }
`;

const Grid = styled.div`
  display: flex;
  flex-direction: row;
  gap: 2rem;
  margin-top: 16rem;
  z-index: 0;
  flex-wrap: wrap;
  justify-content: center;

  @media (max-width: 768px) {
    flex-direction: column;
  }
`;

const Card = styled.a`
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 200px;
  padding: 1.5rem;
  border-radius: 12px;
  text-align: center;
  background: #fff;
  color: #333;
  text-decoration: none;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;

  &:hover {
    transform: rotate(3deg) scale(1.05);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }

  h2 {
    margin: 0 0 1rem 0;
    font-size: 1.5rem;
    color: #0070f3;
  }

  p {
    margin: 0;
    font-size: 1rem;
    color: #666;
  }

  span {
    display: inline-block;
    transition: transform 0.2s;
  }

  &:hover span {
    transform: translateX(4px);
  }
`




export default Home;